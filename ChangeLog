version 5.4 30.11.2012
======================

- fix random memory corruption which leads to coredump when MAX_IP_PER_CALL was reached
- implement getwav genwav manager commands to allow wav download remotly
- name initial SIP last reposne = "NO RESPONSE" with code 0
- implement cleaning spool dir (set interval and size)
- add WARNING in voipmonitor.conf - pcapcommand is implemented by forking which is very expensive and is causing TLB shootouts on multicore system which can generate 500 000 interrupts / sec  causing system to drop packets. Watch the performance carefuly (with "vmstat 1" column "in"). Gziping pcap files will be implemented as native function directly in C++ to obey TLB shootdowns.
- do not overwrite pcap file if it exists
- search voipmonitor binary in sbin first then in bin
- mkdir /var/spool/voipmonitor/ in install script
- reset callend timer on each INVITE to not hangup call in case voipmonitor is not sniffing RTP 
- change default behaviour and do not save :port in domain column. To change it to old behaviour you can set domainport=yes in voipmonitor.conf
- add to_domain to register_state and register_failed tables and treat REGISTER unique for to_domain too instead of only by digestusername and to_num/to_domain
- fix cdr.called/caller when @ character is in sip name ["@home company"<sip:1234@domain>]

version 5.3.2 9.11.2012
=======================
- fix sip last response again - all 200 OK was accidentaly treated as answer to call so canceled calls instead of 487 code had 200 OK like answered calls


version 5.3.1 6.11.2012
======================
- recognize fax calls also if rtpfirstleg is enabled
- fix lastsipresponse for connected calls which was 0 BYE instead of 200 OK

version 5.3 5.11.2012
=====================

- implement matchheader config in voipmonitor.conf which will save provided SIP header to cdr_next.match_header which is then used in WEB GUI to find all CDR legs. Typical is matchheader = in-reply-to. It is turned of by default and if enabled the database is automatically altered once the voipmonitor run which can take minutes - hours depends on number of rows in cdr_next and I/O speed.
- fix cdrtable.sql.* typo for sensors table
- fix wav decode for GSM
- add rtptimeout (voipmonitor.conf), -m, --rtp-timeout it is important value which specifies how much seconds from the last SIP packet or RTP packet is call closed and writen to database. It means that if you need to monitor ONLY SIP you have to set this to at leat 2 hours = 7200 assuming your calls is not longer than 2 hours. Take in mind that seting this to very large value will cause to keep call in memory in case the call lost BYE and can consume all memory and slows down the sniffer - so do not set it to very high numbers. Default is 300 seconds. rtptimeout = 300
- remove custom_header1 from cdr table as it is not used (it is in cdr_next)
- do not store last sip response to BYE but retain it for the invite.

version 5.2 29.10.2012
======================

- fixes some SIP REGISTER issues
- fix savertp = header which never worked if enabled in voipmonitor.conf file
- redesign threading which is now enabled by default and allows to use all available CPU cores. Memory is now fixed size and not causes crash. Communication between threads was optimized too. VoIPmonitor is now able to handle full 1Gbit traffic ~7000 simultaneous calls within one instance (tested on Xeon X5690 and Intel 1Gbit 82580 card using DNA driver). New options controlling threading - vmbuffer, rtpthreads, rtpthread-buffer
- automatically creates mysql tables in database 
- implement id_sensor option to diferentiate cdr between several instances saving to one database and one table
- implement getfile and gettshark file over tcp manager to support many sniffers - one database/GUI
- fix init.d script and pid file handling
- implement possibility to remove duplicate packets 
- no user action on database changes is needed 

version 5.1
===========

- redesign SIP REGISTER handling. register table is now showing only active REGISTRATIONS. Once it expires it is removed from the table to new sql register_state table. The register state table is used to store changes in registrations. New sql table register_failed is used to store all failed sip register - to not overload the table there is counter column which adds +1 for each failed register. The WEB GUI will follow and is not finished yet. 
- Allow all characters from ASCII table in telnunm capture rules which means that now it is possible to make prefix 00 or +420. 
- Implement SIP overlap dialing (used a lot in Germany, thanks Carsten Buchberger) 
- fix rare memory corruption / crashes presented in all versions 
- The callers display-name were not extracted, if it is not enclosed in Double-Quotes which is still valid according RFC
- Implement sniffing packets with two IP headers to support Acme SBC mirror feature
- Implement mysql port configuration option to connect to non standard 3306 port - in voipmonitor.conf and on command line
- fix natalias configuration issue 
- Allows to save only UDPTL (T.38) packets instead of all RTP packets. It is for cases where only FAX is needed to save instead of RTP packets. PDF image creation from T.38 is available in upcoming WEB GUI 5.1 version.
- to upgrade sql run cat cdrtable.sql.5.0-5.1 | mysql voipmonitor - this time it is instant because cdr table is not touched. 

version 5.0.6
=============

- fix memory corruption causing crashes 

version 5.0.5
=============

- fix IP and telnum based capture rules which were not working at all since version 5

version 5.0.4
=============

- Change in voipmonitor.conf localhost to 127.0.0.1 to fix mysql connection on centos for statically build packages
- increase call-id SIP header len from 32 to 128
- all SIP headers has to start right after new line. Otherwise the compact headers t: is maching Contact: 
- According RFC support To: header also if it is not in <> (<sip:....>) and thus correctly extract domain part 

version 5.0.3
=============

- do not load mysql filters if -c on command line. This fixes converting wav files which do not need mysql connection. from the version 5 connection is retrying undefinetly and without specifying -c voipmonitor will not continue to operate.

version 5.0.2
=============

- fix MySQL connection in case --config-file is not specified
- fix payload type in case the first RTP is DTMF or FLASH RTP event (payload 101) preventing GUI to play WAV

version 5.0
===========

- SQL schema changed. Upgrade script is in scripts/mysql_copy_4.2to5.0.php please refer to sniffer manual how to upgrade old 4.2 
- remove mysqlpp denendancy and use native mysql C library

version 4.2
===========

New Features
------------
- implement -y option support decode SIP on ports 5060 - 5099 instead only 5060 directly on command line
- add sql.callend field and INDEX it so special SQL QUERIES filtered with callend is now possible to INDEX and speed it up.
- Do not limit list of live calls to 200.
- Implement RTCP parsing and storing to cdr. New sql columns in cdr for both rtp senders (a_rtcp.* and b_rtcp.*)
- allow change manager bind IP address to other than default 127.0.0.1. /etc/voipmonitor.conf: managerip = 127.0.0.1

Bug fixes
---------
- also decode pcap files to wav in case there is only ONE RTP direction (ringing/one-way calls etc.)
- Fix crackling in WAV in case some packets (G711) are missing and voipmonitor puts empty frames. 
- fix graphs not shown issue in case SIP proxy is forwarding the same INVITE with the same SDP
- The filter_telnum prefix column is int(32) preventing filtering for any telephone numbers higher than 4294967295. Changing the column to bigint allows filters to be created from the web interface but they are  ignored by the voipmonitor sniffer. - make it bingint in db and chnage unsigned int to unsigned long long supporting numbers 0 to 18,446,744,073,709,551,615
- If -W option is put on command line create WAV regardless on filter rules in MySQL table. This fixes generating WAV. 
- fix OGG vorbis encoding (sometimes some recordings had 0kb size). 
- do not show calls in manager which is register messages (which appears in web gui as empty calls with no src/dst)
- escape all characters except @,.,: from the pcap file. It fixes cases where the call-id is named like "2r8i/dfs9fj" and similiar unsafe strings.
- fix packetization = 0 in syslog preventing the call to be recorded (graph or wav)

version 4.1
===========

Optimizations 
-------------
- implement storing pcap and graph files to cache/directory and move it to spool 
directory right after the call ends. the option is -C, --cachedir <dir> (cachedir 
in voipmonitor.conf). Moving all files are guaranteed to be serialized which
solves slow random write I/O on magnetic or other media. Typical cache directory is 
/dev/shm which is in RAM and grows automatically or /mnt/ssd/voipmonitor which is 
mounted to SSD disk or some very fast SAS/SATA disk where spool can be network storage
or raid5 etc. wav files are not implemented yet

Features
--------
- implement --norecord-header option: if any of SIP message during the call contains 
header X-VoipMonitor-norecord call will be not converted to wav and pcap file will be 
deleted.
- implement --norecord-dtmf option which allows to turn of recording of wav/pcap file 
once DTMF SIP INFO sequence == "*0" (in other words if you press * and 0 on your phone 
and you send DTMF via SIP INFO, the call will be not recorded). This option can be given 
on command line or in voipmonitor.conf.

- Store domain part of uri in From and To header in caller_domain and called_domain 
which is new cdr columns. This is not configurable and you MUST upgrade database.
ALTER TABLE cdr ADD caller_domain VARCHAR(255) DEFAULT NULL AFTER caller,  
ADD called_domain VARCHAR(255) DEFAULT NULL AFTER called, ADD KEY `caller_domain` 
(`caller_domain`), add KEY `called_domain` (`called_domain`);
(upgrade large db can take hours so schedule it off peak)

- add experimental option --rtp-nosig allows analyze of RTP streams without signalization. 
Handy if you want to extract RTP without SIP or unsupported H.323 signalization.


Bug fixes
---------

- fix answer duration for calls where there is 200 OK to another message than the first 
INVITE - for example PRACK.
- fix annoying noise in recordings which are put on hold and voipmonitor generates silence.
- fix high PDD in case there are more 18X responses during call.
- set progress_time also if RING 18X is not received and the call is connected or 
aborted so the PDD (Post Dial Delay) is accurate for those cases too 

- If one RTP direction changes SSRC after connect (200 OK) and one of the RTP direction is 
missing (not captured or whatever reason) cdr was saved bad - web gui showed presence of 
both directions - one direction for the first SSRC and the second direction secon SSRC 
so it seemed like there are both directions. Thanks POUILLY GUILLAUME for reporting and 
providing pcap file.

- Fix out of sync audio for cases where call was put on hold and the SSRC of RTP stream changed.
- Fix some G729 recording issues (fast playback) in rare cases.
- Fix WAV recording for PCMU/PCMA streams with CNG (comfort noise generators - payload 13 and payload 19)
- Fix ./configure on centos

version 4.0 
===========

Optimizations
- open pcap file descriptor lekas
- close unused graph files to save a lot of memory
- if calls changes SSRC for every packet (broken device) do not let voipmonitor to take all RAM
- allow to turn off jitterbuffer simulators which takes the most CPU and a lot of RAM
- speedup processing SIP packets. Now the complexity changed from O(N) to O(Log(N)) which is huge speedup performance for a lot of concurrent calls (>500)
- speedup writing CDR after the call ends 
- implement threads to voipmonitor which now can handle thousands of simultanouse calls.
- move testing of SIP packet before testing it for RTP which saves a lot of CPU for high SIP rate packets. 


Features
- implement ODBC. Now voipmonitor can store to any ODBC enabled database like MSSQL.
- implement custom SIP header X-VoipMonitor-Custom1 which it's value will be saved to cdr.custom_header1
- lOG PID for each syslog message to differentiate between several voipmonitor instances
- Implement MOS calculation for G.729 codecs and make this configurable via voipmonitor.conf mos_g729
- allow configure multiple SIP ports
- support sniffing on tun interfaces (openvpn for example). (All DLT_RAW interfaces are supported now)
- implement stereo WAV left channel is callee right channel is caller
- save RTCP packets to pcap file
- implement simple TCP server for managing voipmonitor and getting list of calls
- implement IP and tel. number filters so voipmonitor can now record RTP for selected networks or tel. prefixes. It is done in new mysql tables filter_ip and filter_telnum. Reloading is posible via voipmonitor TCP manager interface (sending command reload)
- Support VLAN tag packets when sniffing on all interfaces "-i any". VLAN worked only for -i ethX
- implement TCP SIP transport and TCP SIP reassembly packets (SIP TCP packets divided to multiple small packets)
- implement postprocess command for pcap file (--pcap-command). Added  %dirname% and %basename% to pcapcommand + add example how to move records from /dev/shm to another place after call is ended.
- added mysql index for callername column
- added reverse string ekvivalent for called,caller,callername and trigger to do automatic reverse. now for search caller like %number is better to use caller_reverse like CONCAT(REVERSE(number),'%') which will use indexed search


Bugs
- fix crashes caused by memory corruptions and some race conditions
- fix many wav sync issues, double speed wav issues and one-way wav issues
- fix typo in SQL table calee -> callee which resulted in not saving callee information to whohanged
- fix pcap file leaks
- fix "myqslhost" -> "mysqlhost" typo. Please update your configuration files!
- fix ogg format
- after 3XX,4XX,5XX some additional packets were not saved
- fix mysql connection handling on error condition
- fix User-Agent header which was stored to called instead of caller
- fixed SIP last response CDR value for cases where 200 OK is missing after BYE.


version 3.0.1
=============
- fix broken command line parsing introduced in 3.0 version 

version 3.0
===========

Upgrade from 2.2:
-----------------

cat cdrtable.sql.2.2-3.0 | mysql voipmonitor # this will take many time
depending on number of cdr records. 


Buf fixes:
----------
- fix memory leak and double CDR during wav recording 
- fix crashes caused by bad fclose
- fix memory corruptions and race condition causing crashes
- Statistics from caller (a_*) was swapped to caller in some cases. 
- Fix ab_received packet. It didnt correspond to what wireshark sees. It was
always two packet less.
- Despite the documentation, the only the long form --pid-file was parsed. Add
missing -P option.
- currently voipmonitor <= 2.2 insists on IPv4 addresses on the sniffing 
interface. That's not necessary, often it's error prone. Furthermore the original 
code provided the IP address to the pcap library, but they expect the netmask. So
the code was wrong and might be a cause for sporadic errors with filter compilation.
- ignore packets where datalen < 0 (corrupted packets? just in case?)
- check if RTP packet is really RTP packet by checking RTP version bit which
has to be equel 2. Without this check, some packets like STUN was confusing 
voipmonitor and graph file and raw file was created for each non RTP UDP packet 
which has the same SRC/DST port.
- calculation of packetization was wrong for G723 in case of 60ms which causes
drops on WAV recording. Simplify and fix packetization.
- fix out of sync WAV recording in case where both RTP streams do not start at
the same time (probably the most cases are for those who sends 200 OK
immediately after 180 RINGING to simulate progress inband).
- Fix recording WAV and RAW rtp for calls with more than one reINVITEs. Name of
files were not unique and some raw files overwrited previouse file so final
file was not in sync and shuffled.
- Fix sync WAV issue for cases where RTP stream is not sending for a while
before reINVITE.  
- fix handling malloc and open files failures
- rise MAX_IP_PER_CALL to 30 

New features:
-------------

- implement --ring-buffer and set it in MB (feature of newer >= 2.6.31 kernels). 
If you see voipmonitor dropping packets in syslog upgrade to newer kernel and 
increase --ring-buffer to higher MB. It is buffer between pcap library and 
voipmonitor. The most reason why voipmonitor drops packets is waiting for I/O 
operations (switching to ext4 from ext3 also helps.
- Implement configuration file. See config/voipmonitor.org. Config is read
only if --config-file /etc/voipmonitor.conf specified on command line
- Implement generic init script. See config/init.d/voipmonitor
(thanks Telephonic http://telephonic.ca for sponsoring this work)
- do not allocate 30 RTP classes for each call, allocate it only whan needed. It
saves RAM and CPU.
- Implement new cdr.whohanged column which represents who hanged up or canceled
call.
- Implement lastSIPresponse and lastSIPresponseNum (cat cdrtable.sql.2.3-2.4
|mysql voipmonitor) you can now filter calls by bad response - example 
SELECT * FROM cdr WHERE lastSIPresponseNum >= 400 (403 Wrong password or domain)
- support compact headers according to rfc3261.txt section 20. Compact headers
means that Call-ID: is replaced by i:. This resulted that voipmonitor ignored
all calls with compact headers on.
- add --rtp-oneleg option which is important option if voipmonitor is sniffing on 
SIP proxy and see both RTP leg of CALL. in that case use this option. It will 
analyze RTP only for the first LEG and not each 4 RTP streams which will confuse 
voipmonitor. Drawback of this switch is that voipmonitor will analyze SDP only 
for SIP packets which have the same IP and port of the first INVITE source IP 
and port. It means it will not work in case where phone sends INVITE from 
a.b.c.d:1024 and SIP proxy replies to a.b.c.d:5060. If you have better idea 
how to solve this problem better please contact support@voipmonitor.org
- Implement SIP register messages storing to PCAP and MySQL new table register. 
This feature is optional with --sip-register new switch and configuration option 
in voipmonitor.conf.
- implement native conversion to OGG vorbis audio, now you can choose if you
want to record to wav or ogg. Ogg is about 25kbps. It can be configured in 
voipmonitor.conf or --audio-format = <wav|ogg> on command line
- raise jitterbuffer for recording stream from 200 to 500 which improves
dejittering audio
- Put write buffers for RAW and WAV files which solves IO throughput. Now it
can convert wav files in realtime for 200 concurent calls on usual sata 2GB
disk and ext4 fs. Before this change queue was filling by calls until it
reached memory limit and voipmonitor crashed. But I'm not recommending writing
WAV file in realtime as it uses a lot of RAM and can cause instability. 
- Change core dump to unlimited
- change default maximum opened files from system default (usually 1024) to
65535 to not block writes for very large network traffic
- make core dump if voipmonitor crashes to voipmonitor directory 

version 2.2
------------------------------------------------------------------------

- do not fetch pcap stats for every packet as it is causing major CPU load.
Fetch it only once per 15 seconds. Before this patch 56Mbit network caused
100% CPU. Now it is abou
t 10% with jitterbuffer simulator off.
- fix 100% CPU running on Feroceon 88FR131 rev 1 (v5l) ARM - Linux debian
2.6.34.6 #1 PREEMPT Thu Aug 26 22:04:51 MDT 2010 armv5tel GNU/Linux
getopt_long returns int not char which converts -1 to 255 on that platform.
- add how-to install voipmonitor in Pbx In A Flash
- Support cases where voipmonitor is running on SIP server which is behind NAT
(endpoints are registering to public IP and SIP server has private IP
address). If you would lik
e to disable this feature, edit voipmonitor.h and delete #define NAT
- fix old bug and add checks to not write over buffers
- update centos instructions to meat libpcap >= 1.x requirments

version 2.1
-----------

New features:

- WAV convertor can now handle codec changes during call, reinvite or without
reinvite. It also covers cases when each direction have different codecs. All 
streams are combined together and is perfectly synchronised. DTMF is also handled 
well. Free version supports G.711, commercial supports G.729/G.723/iLBC/GSM/Speex 
contact support@voipmonitor.org
- voipmonitor now requires libpcap >= 1.0.0 which implements ring buffer. This
buffer is storing all packets incoming on ethernet interface so voipmonitor does 
not miss single packet on CPU/IO peaks. If so, it is logged to syslog.
Hadrcoded value is 5MB which should be enough. It can be tweak in source code.
Default ring buffer in libpcap < 1.0.0 relies on /proc/sys/net/core/rmem_default 
which differs system to system and is low in general for accurate sniffing higher 
traffic (on debian etch it is 135KB). Thanks to AronHopkins
(https://sourceforge.net/tracker/?func=detail&aid=3109439&group_id=312498&atid=1315315)
- implement -c option for not storing CDR into databse. It is usefull when
converting pcap to WAV etc.

Bug fixes:

- fix MySQL crashes and garbled values. Fix useragent cdr field which was sometimes 
uninitialized thus empty or garbled with random data due to bad logic in code. This 
would also cause crashes in MySQL++. 
-  fix open files leak introduced in version 2.0 when converting to WAV files.
It caused stop writing any file to disk.
- stored pcap: do not modify SDP body after rtpmap\r\n, \r was
substituted to \0 which can make problems parsing by voipmonitor again and
possibly another SIP parsers (wireshark is ok). If affects only if recording
to wav with dynamic payload types 
- make sure "iscaller" is detected properly and not based on first INVITE as
there can be reINVITES 
- do not put invalid SSRC into call table, this was causing nasty bugs if
converting to wav
- to minimize sync delay for wav convertor change jitter from fixed to
adaptive
- Whan recording calls to raw(wav) jitterbuffer was not flushing remaining
packets. If there were several rtp payload changes it leads to out of sync
audio.
- 5 first frames were always ignored and this leads to the same issue - out of
sync and missing audio
- always set fbasename
- fix "a_ is always caller, so check if we need to swap indexes" logic which
was completely wrong.

version 2.0
-----------
- pcap to WAV convertor from ALAW/ULAW. Decoding from other codecs are in commercial
version - contact support@voipmonitor.org.
- codec dynamic payload is now properly decodec from SDP
- voipmonitor now calculates MOS for iLBC and G.729 
- new measure parameters
	connect_duration - duration between 200 OK and end of call
	progress_time - number of seconds between first INVITE and 180 or 183 progress message
	first_rtp_time - number of seconds from first INVITE and first RTP packet 
- VLAN support
	voipmonitor can now read VLAN tag packets
	hard-wired udp filter for pcap was removed (it is now on user)
- pcap frame support
	voipmonitor can now sniff on all interfaces (-i any)
- new sipcallerip and sipcalledip columns in cdr SQL table. It saves SIP
source/destination IP address because RTP can be different. 
- try to solve problem with "voipmonitor: no more space for next media stream
(IP:port), raise MAX_IP_PER_CALL"
- a_* columns in database should always belongs to caller
- fix cdr.caller/cdr.called which were swapped in cases of sip re-invites.  

UPGRADE: cat cdrtable.sql.1.3-2.0 | mysql voipmonitor

version 1.4
-----------

- put terminated calls with BYE->OK immediately into CDR database and not wait 5 minutes for packet inactivity
- Comment out ASSERT in jitterbuffer which prevents crashes in cases, where pcap delivers reordered packets.
- continue on timeout when reading live packets, it prevents crashes dereferencing packet structure which can points to uninitialized value or to invalid memory
- For very high packet loss there were problem with bursts calculation and MOS were not reflecting such high packet loss. There were calls with mos 4.5 and 55% packet loss. Now it is fixed.
- For calls with more than two RTP streams (typically one is early media and after connect another two RTP streams represent each side which changes ssrc) voipmonitor saves statistics for two RTP streams only. Two streams are chosen based on received packets. But for very high losses it was choosen not ones with the highest received packets. I've fixed this to sort it based on received packet + packet loss to avoid this.
- (no CDR SQL table change) 


version 1.3
-----------
- hash search function for classifying RTP packets to its Call structure. This will speedup voipmonitor for high call volumes. 
- fix 100% CPU when -k was given
- log big timestamp jump only if verbose is > 4
- log MySQL query error to syslog
- handle MySQL error "2006 - MySQL server has gone away" as reconnecting to database
- fix crashes when dereferencing NULL packet. Sometimes it happens that pcap_next returns NULL pointer. Thanks Carlos Talbot!
- save caller ID with NAME field from SIP INVITE and store it to cdr.callername MySQL column (thanks Carlos Talbot)

UPGRADE: cat cdrtable.sql.1.2.1-1.3 | mysql voipmonitor


version 1.2.1
-------------
- fix random crashing (dereferencing NULL pointer) in jitterbuffer simulator. 

version 1.2
-----------

- fix bug: On some systems (gentoo libpcap-1.0) when live capturing, 
  voipmonitor ends after few seconds. It was caused by pcap_next function 
  which returns NULL frame. Instead of pcap_next, use
  pcap_next_ex which returns status code. 
- make mysql table optional with `cdr` as default
- support for graph compress via gzstream library (included)
- new long options (--mysql-user, etc.)
- add support for pid file to make start scripts happy (thanks Vladislav Krakhalev)
